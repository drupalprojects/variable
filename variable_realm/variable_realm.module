<?php
/**
 * @file
 * Variable API module - Realms
 */

/**
 * Implementation of hook_boot()
 * 
 * We set variable realm and language code as early as possible in the page request. By setting
 * the language code to 'default' we mean no language specific variables have been loaded yet.
 */
function variable_realm_boot() {
  variable_status(array('realm' => 'default', 'langcode' => 'default'));
}

/**
 * Build realm with language and default variables
 * 
 * The result will be the combined values of
 * - Selected realm and langcode
 * - Selected realm and default langcode
 * - Default realm and langcode
 * - Default realm and default langcode (default global variables)
 * 
 * Realm values take precedence over language values.
 */
function &variable_realm_build($realm, $langcode) {
  $build = &variable_static('variable_build');
  if (!isset($build[$realm][$langcode])) {
    $variables = $merge = array();
    foreach (array($realm, 'default') as $key) {
      foreach (array($langcode, 'default') as $lang) {
        if (!isset($merge[$key][$lang])) {
          $variables += variable_realm_get($key, $lang);
          $merge[$key][$lang] = TRUE;
        }
      }
    }
    $build[$realm][$langcode] = $variables;
  }
  return $build[$realm][$langcode];
}


/**
 * Get realm variable value or all realm variables
 * 
 * @param $realm
 *   Realm name
 * @param $langcode
 *   Language code
 * @param $cache
 *   Whether to update the cache
 */
function &variable_realm_get($realm, $langcode, $cache = TRUE) {
  $realms = &variable_static('variable_realms');
  if (!isset($realms[$realm][$langcode])) {
    if ($cache = variable_cache_get('variable_realms:' . $realm, $langcode)) {
      $realms[$realm][$langcode] = $cache->data;
    }
    else {
      $realms[$realm][$langcode] = variable_realm_load($realm, $langcode);
      if ($cache) {
        variable_cache_set('variable_realms:' . $realm, $realms[$realm][$langcode], $langcode);
        // If this was marked as updated (changed, uncached), unmark it
        $updated = &variable_static('variable_update');
        $updated[$realm][$langcode] = NULL;
      }
    }
  }
  return $realms[$realm][$langcode];
}


/**
 * Get value from realm with optional fallback to default realms
 * 
 * Fallback order is
 * 1. same realm, default language
 * 2. default realm, same language
 * 3. default realm, default language
 */
function variable_realm_get_value($realm, $langcode, $name, $fallback = TRUE) {
  if ($fallback) {
    $variables = &variable_realm_build($realm, $langcode);
  }
  else {
    $variables = &variable_realm_get($realm, $langcode);
  }
  return isset($variables[$name]) ? $variables[$name] : NULL;
}

/**
 * Set variable value
 */
function variable_realm_set_value($realm, $langcode, $name, $value) {
  // Get realm variables, but don't update cache as we are about to change it
  $variables = &variable_realm_get($realm, $langcode, FALSE);
  $variables[$name] = $value;
  if ($realm == 'default' && $langcode == 'default') {
    variable_set($name, $value);
  }
  else {
    $serialized_value = serialize($value);
    db_query("UPDATE {variable_realm} SET value = '%s' WHERE name = '%s' AND realm = '%s' AND langcode = '%s'", $serialized_value, $name, $realm, $langcode);
    if (!db_affected_rows()) {
      @db_query("INSERT INTO {variable_realm} (name, realm, langcode, value) VALUES ('%s', '%s', '%s', '%s')", $name, $realm, $langcode, $serialized_value);
    }
  }
  // If it is the first time we update this realm, invalidate cache and rebuild all related variables
  $updated = &variable_static('variable_update');
  if (!isset($updated[$realm][$langcode])) {
    variable_realm_clear($realm, $langcode);
  }
  $updated[$realm][$langcode][$name] = $value;
}

/**
 * Delete variable
 */
function variable_realm_del($realm, $langcode, $name) {
  // Get realm variables, but don't update cache as we are about to change it
  $variables = &variable_realm_get($realm, $langcode, FALSE);
  if (isset($variables[$name])) {
    unset($variables[$name]);
    if ($realm == 'default' && $langcode == 'default') {
      variable_del($name);
    }
    else {
      db_query("DELETE FROM {variable_realm} WHERE name = '%s' AND realm = '%s' AND langcode = '%s'", $name, $realm, $langcode);
    }
    variable_realm_clear($realm, $langcode);
  }
}

/**
 * Clear all caches for this realm
 */
function variable_realm_clear($realm, $langcode) {
  $build = &variable_static('variable_build');
  if ($realm == 'default' && $language == 'default') {
    // This is the default realm, default language, clean all realm builds
    $realms = &variable_static('variable_realms');
    $default = $realms['default']['default'];
    $realms = array();
    $realms['default']['default'] = $default;
    $build = array();
    return;
  }
  // Not default realm & language, first clear specific cache
  variable_cache_clear('variable_realms', $realm, $langcode);
  if ($realm == 'default') {
    // If this is the default realm, clean all builds for this language
    foreach (array_keys($build) as $key) {
      if (isset($build[$key][$langcode])) {
        unset($build[$key][$langcode]);
      }
    }
  }
  else if ($language == 'default') {
    // Clean all languages for this realm
    if (isset($build[$realm])) {
      unset($build[$realm]);
    }
  }
  else {
    // No default values, just clean this realm, language
    if (isset($build[$realm][$langcode])) {
      unset($build[$realm][$langcode]);
    }
  }
}

/**
 * Load realm from db
 */
function variable_realm_load($realm, $langcode) {
  $variables = array();
  $result = db_query("SELECT * FROM {variable_realm} WHERE realm = '%s' AND language = '%s'", $realm, $langcode);
  while ($variable = db_fetch_object($result)) {
    $variables[$variable->name] = unserialize($variable->value);
  }
  return $variables;
}

/**
 * Initialize the realm system
 */
function &variable_realm_init() {
  static $status;
  if (!isset($status)) {
    $status = &variable_static('variable_status', array());
    $realms = &variable_static('variable_realms');
    // We store the absolute defaults for variables here
    $realms['default']['default'] = variable_global_get('conf');
    $status += array(
      'realm' => 'default',
      'langcode' => 'default',
      'language' => variable_language(),
      'fallback' => TRUE,
    );
  }
  return $status;
}


/**
 * Switch global variable realm
 */
function variable_realm_switch($realm = 'default') {
  static $status;
  if (!isset($status)) {
    $status = &variable_realm_init();
  }
  if ($realm != $status['realm']) {
    // Note we don't get the values by reference, we don't want Drupal to pollute our array
    variable_global_set('conf', variable_realm_build($realm, $status['langcode']));
    $status['realm'] = $realm;
  }
}

/**
 * Switch language for global variables
 * 
 * @param $langcode
 *   Language object. If not set we switch back to 'default' language
 */
function variable_switch_language($language = NULL) {
  $status = &variable_realm_init();
  if ($language) {
    $langcode = $language->language;    
  }
  else {
    $langcode = 'default';
    $language = variable_global_get('language');
  }
  if ($langcode != $status['langcode']) {
    variable_global_set('language', $language);
    variable_global_set('conf', variable_realm_build($status['realm'], $langcode));
    $status['language'] = $language;
    $status['langcode'] = $langcode;
  }
}
